@{
    Layout = null;
}
<!-- scripts and style sheets-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>

<div class="table-div">
    <br />
    <div style="width:90%; margin:0 auto;">
        <table id="prova" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>MaterialID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>imgUrl</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<div id="view-image" class="view-image">
    <img id="image-preview" src="" />
</div>

@*Loading Datatables to the page*@
<link href="~/css/material.css" rel="stylesheet" />
<link href="~/datatables/datatables.css" rel="stylesheet" />

<script>



    $(document).ready(function ()
{

    var table = $('#prova').DataTable({
        "processing": true, // for show progress bar
        "serverSide": true, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": "Material/LoadData",
            "type": "POST",
            "datatype": "json"
        },
        "columns": [

            { "data": "materialID", "name": "materialID", "autoWidth": true },
            { "data": "name", "name": "name", "autoWidth": true },
            { "data": "description", "name": "description", "autoWidth": true },
            { "data": "imgUrl", "autoWidth": true },
            { "render": function(data, type, full) {

                    return '<a class="btn btn-info btn-sm" href=#/>' + 'Print' + '</a>';
                }},
            { "render": function(data, type, full) {

                    return '<a class="btn btn-info btn-sm download-button" href=#/>' + 'Download' + '</a>';
                }}

        ]

    });





// show preview image row event

    $('#prova tbody').on('click', 'tr', function () {



        var fileName = table.row(this).data().imgUrl;


        $.ajax({
            url:"Material/LoadImage",
            data:{
                imageName: fileName,

            },
            contentType: "image/png",
            success:function(img)
            {
                $('#image-preview').attr('src', img);
            }
        });



    });

// download button event
    $('#prova tbody').on( 'click', '.download-button', function () {


        var fileName = table.row( $(this).parents('tr') ).data().imgUrl;
        window.location = "/Material/DownloadImage?imageName="+fileName; @*funziona perchè il server su cui è salvato il file è lo stesso che serve le pagine html?*@



    @*$('.download-button').on('click', function () {
    $.ajax({
        url: "/Material/DownloadImage/",
        data:{
                imageName: fileName,

            },
        method: 'GET',
        @*xhrFields: {
            responseType: 'text'
        },
        success: function (data) {
            var a = document.createElement('a');

        var binaryData = [];
        binaryData.push(data);
        var url = window.URL.createObjectURL(new Blob(binaryData, {type: "image/jpg"}))

            a.href = url;
            a.download = 'myfile.jpg';
            a.click();
            window.URL.revokeObjectURL(url);
         }
            });
        });*@




    } );










});




</script>

